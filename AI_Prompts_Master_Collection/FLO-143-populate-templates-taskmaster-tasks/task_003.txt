# Task ID: 3
# Title: Implement Event Emission for New Stems
# Status: pending
# Dependencies: 2
# Priority: high
# Description: Create functionality to emit populate_template events when a new stem is created, as specified in FLO-236.
# Details:
1. Create `emitNewStem.ts` helper in `gateways/noggin/src/chats/controllers/`
2. Implement function to emit events to message broker (Kafka/RabbitMQ):
```typescript
export async function emitNewStem(
  broker: MessageBroker,
  runId: string,
  templateId: string,
  stemId: string,
  requestedBy: string,
  params: Record<string, any>
): Promise<void> {
  const event = {
    type: 'populate_template',
    runId,
    templateId,
    stemId,
    requestedBy,
    params
  };
  
  // Use transaction or deduplication key to ensure idempotence
  await broker.publish('template.populate', event, {
    dedupeKey: `populate_template:${stemId}`
  });
}
```
3. Integrate this helper into the postRun controller when a new stem is created
4. Ensure idempotence using database transactions or message broker deduplication features

# Test Strategy:
1. Unit test the emitNewStem function with mocked broker
2. Verify correct event payload structure
3. Test idempotence - ensure duplicate calls don't result in duplicate events
4. Integration test with in-memory message broker
5. Verify event is only emitted when stem_id is absent in the request
