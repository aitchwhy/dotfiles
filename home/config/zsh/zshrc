# File: home/.config/zsh/.zshrc
# Core ZSH configuration

# -----------------------------------------------------
# Performance Optimization
# -----------------------------------------------------
# Uncomment if you need to profile startup time
# zmodload zsh/zprof

# -----------------------------------------------------
# XDG Base Directory Specification
# -----------------------------------------------------
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
export XDG_STATE_HOME="${XDG_STATE_HOME:-$HOME/.local/state}"

# -----------------------------------------------------
# Core Environment Setup
# -----------------------------------------------------
export DOTFILES="${XDG_CONFIG_HOME}/dotfiles"
export ZDOTDIR="${XDG_CONFIG_HOME}/zsh"
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'

# Editor Configuration
export EDITOR='nvim'
export VISUAL='nvim'
export SUDO_EDITOR='nvim'

# Pager Configuration
export PAGER='less'
export LESS='--RAW-CONTROL-CHARS --quit-if-one-screen --no-init'
export MANPAGER="sh -c 'col -bx | bat --language=man --plain'"

# -----------------------------------------------------
# Homebrew Setup
# -----------------------------------------------------
if [[ -x /opt/homebrew/bin/brew ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
elif [[ -x /usr/local/bin/brew ]]; then
    eval "$(/usr/local/bin/brew shellenv)"
elif (( ${+commands[brew]} )); then
    eval "$(brew shellenv)"
fi

# Homebrew Preferences
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_ENV_HINTS=1
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_BAT=1
export HOMEBREW_CURL_RETRIES=2

# -----------------------------------------------------
# History Configuration
# -----------------------------------------------------
mkdir -p "${XDG_DATA_HOME}/zsh"
HISTFILE="${XDG_DATA_HOME}/zsh/history"
HISTSIZE=1000000
SAVEHIST=1000000

setopt EXTENDED_HISTORY        # Save timestamp and duration
setopt SHARE_HISTORY          # Share history between sessions
setopt HIST_EXPIRE_DUPS_FIRST # Expire duplicates first
setopt HIST_IGNORE_DUPS       # Ignore duplicate entries
setopt HIST_FIND_NO_DUPS      # Don't show duplicates in search
setopt HIST_REDUCE_BLANKS     # Remove superfluous blanks
setopt HIST_VERIFY            # Verify history expansion

# -----------------------------------------------------
# Directory Navigation
# -----------------------------------------------------
setopt AUTO_CD              # Change directories without cd
setopt AUTO_PUSHD          # Push directories to stack
setopt PUSHD_IGNORE_DUPS   # Don't push duplicates
setopt PUSHD_SILENT        # Quiet directory stacking
setopt EXTENDED_GLOB       # Enable extended globbing
setopt INTERACTIVE_COMMENTS # Allow comments in interactive shells
setopt COMPLETE_IN_WORD    # Complete from both ends of word
setopt NOTIFY              # Report status of background jobs immediately

# -----------------------------------------------------
# Tool-specific Configuration
# -----------------------------------------------------
# FZF
if (( ${+commands[fzf]} )); then
    export FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --exclude .git"
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_ALT_C_COMMAND="fd --type d --hidden --no-ignore"
    source $HOMEBREW_PREFIX/opt/fzf/shell/completion.zsh
    source $HOMEBREW_PREFIX/opt/fzf/shell/key-bindings.zsh
fi

# Pyenv
if (( ${+commands[pyenv]} )); then
    export PYENV_ROOT="$HOME/.pyenv"
    eval "$(pyenv init -)"
fi

# Volta (Node.js version manager)
if [[ -d "$HOME/.volta" ]]; then
    export VOLTA_HOME="$HOME/.volta"
    path=("$VOLTA_HOME/bin" $path)
fi

# Rust
[[ -f "$HOME/.cargo/env" ]] && source "$HOME/.cargo/env"

# -----------------------------------------------------
# Path Configuration
# -----------------------------------------------------
typeset -U path fpath

# System paths
path=(
    $HOMEBREW_PREFIX/{bin,sbin}
    $HOME/.local/{bin,sbin}
    /usr/local/{bin,sbin}
    $path
)

# -----------------------------------------------------
# Completion System
# -----------------------------------------------------
# Initialize completion caching
autoload -Uz compinit
if [[ -n ${ZDOTDIR}/.zcompdump(#qN.mh+24) ]]; then
    compinit -d "${ZDOTDIR}/.zcompdump"
else
    compinit -C -d "${ZDOTDIR}/.zcompdump"
fi

# Load additional completions
fpath=(
    ${HOMEBREW_PREFIX}/share/zsh/site-functions
    ${HOMEBREW_PREFIX}/share/zsh-completions
    $fpath
)

# Completion styling
zstyle ':completion:*' menu select
zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path "${XDG_CACHE_HOME}/zsh/zcompcache"
zstyle ':completion:*:*:*:*:descriptions' format '%F{green}-- %d --%f'
zstyle ':completion:*:*:*:*:corrections' format '%F{yellow}!- %d (errors: %e) -!%f'
zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'

# -----------------------------------------------------
# Key Bindings
# -----------------------------------------------------
bindkey -v  # Vi mode
bindkey '^R' _atuin_search_widget  # Atuin for history
bindkey '^[[1;5C' forward-word     # Ctrl + right
bindkey '^[[1;5D' backward-word    # Ctrl + left
bindkey '^H' backward-kill-word    # Ctrl + backspace
bindkey '^[[3;5~' kill-word       # Ctrl + delete

# -----------------------------------------------------
# Source Additional Configurations
# -----------------------------------------------------
source "${ZDOTDIR}/aliases.zsh"
source "${ZDOTDIR}/functions.zsh"

