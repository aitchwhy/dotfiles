
# # Load custom functions
# source "${ZDOTDIR}/functions.zsh"

# # History settings
# HISTSIZE=50000
# SAVEHIST=10000
# setopt extended_history
# setopt hist_expire_dups_first
# setopt hist_ignore_dups
# setopt hist_ignore_space
# setopt hist_verify
# setopt inc_append_history
# setopt share_history

# # Directory options
# setopt auto_cd
# setopt auto_pushd
# setopt pushd_ignore_dups
# setopt pushd_minus


# Helper function for command availability check
has_command() { command -v "$1" >/dev/null; }

# # If .plugins.zsh was generated by Antidote, load it:
# if [[ -f "${ZDOTDIR:-$HOME}/.plugins.zsh" ]]; then
#   source "${ZDOTDIR:-$HOME}/.plugins.zsh"
# fi

# Load configurations
for conf in "${ZDOTDIR:-$HOME}"/{env,aliases,completions,functions,macos}.zsh; do
    [[ -r "$conf" ]] && source "$conf"
done


# Initialize antidote - https://github.com/getantidote/zdotdir
source ${ZDOTDIR}/.antidote/antidote.zsh
antidote load ${ZDOTDIR}/plugins.txt

# Initialize completion system
autoload -Uz compinit

# Load Homebrew completions
if type brew &>/dev/null; then
    FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi


# # Initialize antidote - https://github.com/getantidote/zdotdir
# source ${ZDOTDIR}/.antidote/antidote.zsh
# antidote load ${ZDOTDIR}/plugins.txt

# # Load tool configurations
# load_if_exists "starship" "starship init zsh"
# load_if_exists "direnv" "direnv hook zsh"
# load_if_exists "atuin" "atuin init zsh"
# load_if_exists "zoxide" "zoxide init zsh"


# # If .plugins.zsh was generated by Antidote, load it:
# if [[ -f "${ZDOTDIR:-$HOME}/.plugins.zsh" ]]; then
#   source "${ZDOTDIR:-$HOME}/.plugins.zsh"
# fi

# # Source aliases.zsh if it exists
# if [[ -f "${ZDOTDIR:-$HOME}/aliases.zsh" ]]; then
#   source "${ZDOTDIR:-$HOME}/aliases.zsh"
# fi

# # Source macos.zsh if it exists
# if [[ -f "${ZDOTDIR:-$HOME}/macos.zsh" ]]; then
#   source "${ZDOTDIR:-$HOME}/macos.zsh"
# fi




# # -----------------------------------------------------
# # Key Bindings
# # -----------------------------------------------------
# bindkey -v  # Vi mode
# bindkey '^[[1;5C' forward-word
# bindkey '^[[1;5D' backward-word
# bindkey '^H' backward-kill-word
# bindkey '^[[3;5~' kill-word

# # -----------------------------------------------------
# # Aliases
# # -----------------------------------------------------
# # Modern CLI replacements
# has_command bat && alias cat='bat --paging=never'
# has_command eza && {
#     alias ls='eza --icons --group-directories-first'
#     alias ll='eza -l --git --icons --group-directories-first'
#     alias la='eza -la --git --icons --group-directories-first'
#     alias lt='eza --tree --icons --group-directories-first'
# }
# has_command rg && alias grep='rg'
# has_command fd && alias find='fd'
# has_command zoxide && alias cd='z'

# # Git shortcuts
# alias gs='git status'
# alias ga='git add'
# alias gc='git commit'
# alias gp='git push'
# alias gl='git pull'
# has_command lazygit && alias lg='lazygit'

# # Navigation
# alias ..='cd ..'
# alias ...='cd ../..'
# alias ....='cd ../../..'
# alias -- -='cd -'

# # Package management
# alias brewup='brew update && brew upgrade && brew cleanup'

# # Editor
# alias v='nvim'
# alias vc='nvim ~/.config/nvim/'

# # -----------------------------------------------------
# # Tool Initialization (Early)
# # -----------------------------------------------------
# # Initialize starship first for prompt
# if [[ -x "$(command -v starship)" ]]; then
#     eval "$(starship init zsh)"
# else
#     echo "Warning: starship not found. Please install with 'brew install starship'"
# fi

# # Other tool initializations
# eval "$(zoxide init zsh)"
# eval "$(atuin init zsh)"
# eval "$(direnv hook zsh)"

# # -----------------------------------------------------
# # Plugin System
# # -----------------------------------------------------
# # Load plugins if they exist
# local plugins=(
#     "/opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
#     "/opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
#     "/opt/homebrew/share/zsh-abbr/zsh-abbr.zsh"
# )

# for plugin in $plugins; do
#     [[ -f $plugin ]] && source $plugin
# done

# # -----------------------------------------------------
# # Load Custom Functions
# # -----------------------------------------------------
# [[ -f "${ZDOTDIR}/functions.zsh" ]] && source "${ZDOTDIR}/functions.zsh"

# # -----------------------------------------------------
# # Local Configuration
# # -----------------------------------------------------
# # Load local overrides if they exist
# [[ -f "${ZDOTDIR}/local.zsh" ]] && source "${ZDOTDIR}/local.zsh"

