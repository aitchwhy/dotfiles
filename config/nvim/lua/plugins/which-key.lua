return {
  {
    "folke/which-key.nvim",
    event = "VeryLazy",
    opts = {
      -- Your which-key general settings
      plugins = {
        marks = true,
        registers = true,
        spelling = { enabled = false },
        presets = {
          operators = true,
          motions = true,
          text_objects = true,
          windows = true,
          nav = true,
          z = true,
          g = true,
        },
      },
      window = {
        border = "single",
        padding = { 2, 2, 2, 2 },
      },
      layout = {
        height = { min = 4, max = 25 },
        width = { min = 20, max = 50 },
        spacing = 3,
      },
      -- Extend LazyVim mappings
      defaults = {
        mode = { "n", "v" },
        ["<leader>f"] = { name = "+find" },
        ["<leader>g"] = { name = "+git" },
      },
    },
    config = function(_, opts)
      local wk = require("which-key")
      wk.setup(opts)

      -- Register normal mode mappings
      wk.register({
        ["<leader>f"] = { "<cmd>Telescope find_files<cr>", "Find files" },
        ["<leader>g"] = { "<cmd>Telescope live_grep<cr>", "Grep project" },
      })

      -- Register text object mappings (visual and operator-pending modes)
      wk.register({
        -- Around textobjects
        ["a "] = { desc = "Whitespace" },
        ['a"'] = { desc = 'Balanced "' },
        ["a'"] = { desc = "Balanced '" },
        ["a("] = { desc = "Balanced (" },
        ["a)"] = { desc = "Balanced )" },
        ["a<"] = { desc = "Balanced <" },
        ["a>"] = { desc = "Balanced >" },
        ["a?"] = { desc = "User Prompt" },
        ["a["] = { desc = "Balanced [" },
        ["a]"] = { desc = "Balanced ]" },
        ["a_"] = { desc = "Underscore" },
        ["a`"] = { desc = "Balanced `" },
        ["aa"] = { desc = "Argument" },
        ["ab"] = { desc = "Balanced ), ], }" },
        ["ac"] = { desc = "Class" },
        ["af"] = { desc = "Function" },
        ["ag"] = { desc = "Buffer" },
        ["ao"] = { desc = "Block, conditional, loop" },
        ["aq"] = { desc = "Quote `, \", '" },
        ["at"] = { desc = "Tag" },
        ["a{"] = { desc = "Balanced {" },
        ["a}"] = { desc = "Balanced }" },

        -- Around Last textobject group
        ["al"] = { name = "Around Last textobject" },
        ["al "] = { desc = "Whitespace" },
        ['al"'] = { desc = 'Balanced "' },
        ["al'"] = { desc = "Balanced '" },
        ["al("] = { desc = "Balanced (" },
        ["al)"] = { desc = "Balanced )" },
        ["al<"] = { desc = "Balanced <" },
        ["al>"] = { desc = "Balanced >" },
        ["al?"] = { desc = "User Prompt" },
        ["al["] = { desc = "Balanced [" },
        ["al]"] = { desc = "Balanced ]" },
        ["al_"] = { desc = "Underscore" },
        ["al`"] = { desc = "Balanced `" },
        ["ala"] = { desc = "Argument" },
        ["alb"] = { desc = "Balanced ), ], }" },
        ["alc"] = { desc = "Class" },
        ["alf"] = { desc = "Function" },
        ["alg"] = { desc = "Buffer" },
        ["alo"] = { desc = "Block, conditional, loop" },
        ["alq"] = { desc = "Quote `, \", '" },
        ["alt"] = { desc = "Tag" },
        ["al{"] = { desc = "Balanced {" },
        ["al}"] = { desc = "Balanced }" },

        -- Around Next textobject group
        ["an"] = { name = "Around Next textobject" },
        ["an "] = { desc = "Whitespace" },
        ['an"'] = { desc = 'Balanced "' },
        ["an'"] = { desc = "Balanced '" },
        ["an("] = { desc = "Balanced (" },
        ["an)"] = { desc = "Balanced )" },
        ["an<"] = { desc = "Balanced <" },
        ["an>"] = { desc = "Balanced >" },
        ["an?"] = { desc = "User Prompt" },
        ["an["] = { desc = "Balanced [" },
        ["an]"] = { desc = "Balanced ]" },
        ["an_"] = { desc = "Underscore" },
        ["an`"] = { desc = "Balanced `" },
        ["ana"] = { desc = "Argument" },
        ["anb"] = { desc = "Balanced ), ], }" },
        ["anc"] = { desc = "Class" },
        ["anf"] = { desc = "Function" },
        ["ang"] = { desc = "Buffer" },
        ["ano"] = { desc = "Block, conditional, loop" },
        ["anq"] = { desc = "Quote `, \", '" },
        ["ant"] = { desc = "Tag" },
        ["an{"] = { desc = "Balanced {" },
        ["an}"] = { desc = "Balanced }" },

        -- Inside textobjects
        ["i "] = { desc = "Whitespace" },
        ['i"'] = { desc = 'Balanced "' },
        ["i'"] = { desc = "Balanced '" },
        ["i("] = { desc = "Balanced (" },
        ["i)"] = { desc = "Balanced ) including white-space" },
        ["i<"] = { desc = "Balanced <" },
        ["i>"] = { desc = "Balanced > including white-space" },
        ["i?"] = { desc = "User Prompt" },
        ["i["] = { desc = "Balanced [" },
        ["i]"] = { desc = "Balanced ] including white-space" },
        ["i_"] = { desc = "Underscore" },
        ["i`"] = { desc = "Balanced `" },
        ["ia"] = { desc = "Argument" },
        ["ib"] = { desc = "Balanced ), ], }" },
        ["ic"] = { desc = "Class" },
        ["if"] = { desc = "Function" },
        ["ig"] = { desc = "Buffer" },
        ["io"] = { desc = "Block, conditional, loop" },
        ["iq"] = { desc = "Quote `, \", '" },
        ["it"] = { desc = "Tag" },
        ["i{"] = { desc = "Balanced {" },
        ["i}"] = { desc = "Balanced } including white-space" },

        -- Inside Last textobject group
        ["il"] = { name = "Inside Last textobject" },
        ["il "] = { desc = "Whitespace" },
        ['il"'] = { desc = 'Balanced "' },
        ["il'"] = { desc = "Balanced '" },
        ["il("] = { desc = "Balanced (" },
        ["il)"] = { desc = "Balanced ) including white-space" },
        ["il<"] = { desc = "Balanced <" },
        ["il>"] = { desc = "Balanced > including white-space" },
        ["il?"] = { desc = "User Prompt" },
        ["il["] = { desc = "Balanced [" },
        ["il]"] = { desc = "Balanced ] including white-space" },
        ["il_"] = { desc = "Underscore" },
        ["il`"] = { desc = "Balanced `" },
        ["ila"] = { desc = "Argument" },
        ["ilb"] = { desc = "Balanced ), ], }" },
        ["ilc"] = { desc = "Class" },
        ["ilf"] = { desc = "Function" },
        ["ilg"] = { desc = "Buffer" },
        ["ilo"] = { desc = "Block, conditional, loop" },
        ["ilq"] = { desc = "Quote `, \", '" },
        ["ilt"] = { desc = "Tag" },
        ["il{"] = { desc = "Balanced {" },
        ["il}"] = { desc = "Balanced } including white-space" },

        -- Inside Next textobject group
        ["in"] = { name = "Inside Next textobject" },
        ["in "] = { desc = "Whitespace" },
        ['in"'] = { desc = 'Balanced "' },
        ["in'"] = { desc = "Balanced '" },
        ["in("] = { desc = "Balanced (" },
        ["in)"] = { desc = "Balanced ) including white-space" },
        ["in<"] = { desc = "Balanced <" },
        ["in>"] = { desc = "Balanced > including white-space" },
        ["in?"] = { desc = "User Prompt" },
        ["in["] = { desc = "Balanced [" },
        ["in]"] = { desc = "Balanced ] including white-space" },
        ["in_"] = { desc = "Underscore" },
        ["in`"] = { desc = "Balanced `" },
        ["ina"] = { desc = "Argument" },
        ["inb"] = { desc = "Balanced ), ], }" },
        ["inc"] = { desc = "Class" },
        ["inf"] = { desc = "Function" },
        ["ing"] = { desc = "Buffer" },
        ["ino"] = { desc = "Block, conditional, loop" },
        ["inq"] = { desc = "Quote `, \", '" },
        ["int"] = { desc = "Tag" },
        ["in{"] = { desc = "Balanced {" },
        ["in}"] = { desc = "Balanced } including white-space" },
      }, { mode = { "o", "x" } })
    end,
  },
}
