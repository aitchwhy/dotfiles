# # yaml-language-server: $schema=https://raw.githubusercontent.com/jesseduffield/lazygit/master/schema/config.json
# # https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md
#
# gui:
#   # Minimalist theme with clean colors
#   theme:
#     # lightTheme: false
#     # Border color of focused window
#     activeBorderColor:
#       - cyan
#       - bold
#
#     # Border color of non-focused windows
#     inactiveBorderColor:
#       - default
#       # - white
#
#     # Border color of focused window when searching in that window
#     searchingActiveBorderColor:
#       - cyan
#       - bold
#
#     # Color of keybindings help text in the bottom line
#     optionsTextColor:
#       - blue
#
#     # Background color of selected line.
#     # See https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md#highlighting-the-selected-line
#     selectedLineBgColor:
#       # - blue
#       - default
#
#     # Background color of selected line when view doesn't have focus.
#     inactiveViewSelectedLineBgColor:
#       - bold
#
#     # Foreground color of copied commit
#     cherryPickedCommitFgColor:
#       - blue
#
#     # Background color of copied commit
#     cherryPickedCommitBgColor:
#       - cyan
#
#     # Foreground color of marked base commit (for rebase)
#     markedBaseCommitFgColor:
#       - blue
#
#     # Background color of marked base commit (for rebase)
#     markedBaseCommitBgColor:
#       - yellow
#
#     # Color for file with unstaged changes
#     unstagedChangesColor:
#       - red
#
#     # Default text color
#     defaultFgColor:
#       - default
#
#   # Cleaner UI settings (Critical to fix the split diff view)
#   # If true (default), file icons are shown in the file views. Only relevant if NerdFontsVersion is not empty.
#   showFileIcons: true
#   showFileTree: true
#   showRandomTip: false
#   showCommandLog: false # Hide command log for cleaner interface
#   showBottomLine:
#     false
#     # If true, show commit hashes alongside branch names in the branches view.
#   showBranchCommitHash: false
#   nerdFontsVersion:
#     "3"
#     # Sometimes the main window is split in two (e.g. when the selected file has both staged and unstaged changes). This setting controls how the two sections are split.
#   # Options are:
#   # - 'horizontal': split the window horizontally
#   # - 'vertical': split the window vertically
#   # - 'flexible': (default) split the window horizontally if the window is wide enough, otherwise split vertically
#   mainPanelSplitMode: flexible
#
#   # Whether to split the main window when viewing file changes.
#   # One of: 'auto' | 'always'
#   # If 'auto', only split the main window when a file has both staged and unstaged changes
#   splitDiff: auto
#
#   # How things are filtered when typing '/'.
#   # One of 'substring' (default) | 'fuzzy'
#   filterMode: fuzzy
#
#   # If true, increase the height of the focused side window; creating an accordion effect.
#   expandFocusedSidePanel: true
#   border:
#     "rounded"
#     # Fraction of the total screen width to use for the left side section. You may want to pick a small number (e.g. 0.2) if you're using a narrow screen, so that you can see more of the main section.
#   # Number from 0 to 1.0.
#   sidePanelWidth: 0.3333
#
#   # nerdFontsVersion: "3"
#   # showCommandLog: true
#   # expandFocusedSidePanel: true
#   # showFileTree: true
#
# git:
#   paging:
#     # If true, Lazygit will use whatever pager is specified in `$GIT_PAGER`, `$PAGER`, or your *git config*. If the pager ends with something like ` | less` we will strip that part out, because less doesn't play nice with our rendering approach. If the custom pager uses less under the hood, that will also break rendering (hence the `--paging=never` flag for the `delta` pager).
#     useConfig: true
#     # colorArg: always
#     # pager: delta --dark --paging=never
#   # Clean diff view
#   # diffContextSize: 3
#   # overrideGpg: true
#   log:
#     showGraph: "when-maximised"
#
#   # paging:
#   #   # If true, Lazygit will use whatever pager is specified in `$GIT_PAGER`, `$PAGER`, or your *git config*. If the pager ends with something like ` | less` we will strip that part out, because less doesn't play nice with our rendering approach. If the custom pager uses less under the hood, that will also break rendering (hence the `--paging=never` flag for the `delta` pager).
#   #   # useConfig: true
#   #   colorArg: always
#   #   pager: delta --dark --paging=never
#
#   commit:
#     signOff: false
#   merging:
#     manualCommit: false
#   skipHookPrefix: WIP
#   autoFetch: true
#   branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --"
#
#   # merging:
#   #   manualCommit: false
#   # skipHookPrefix: WIP
#   # # autoFetch: true
#   # branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --"
#
# # Delta options (for cleaner diffs)
# customCommands:
#   - key: "D"
#     command: "git diff --name-only --diff-filter=d | xargs bat --diff"
#     context: "files"
#     description: "View diff with bat"
#     subprocess: true
#
# # os:
# #   edit: "nvim {{filename}}"
# #   open: "open ~/Applications/Ghostty.app {{filename}}"
#
# # Clean editor command
# os:
#   edit: "nvim {{filename}}"
#   editAtLine: "nvim +{{line}} {{filename}}"
#   open: "open {{filename}}"
#
#   # # Vim-like keybindings with intuitive additions
# # keybinding:
# #   universal:
# #     quit: "q"
# #     return: "<esc>"
# #     scrollUpMain: "<c-u>"  # Page up
# #     scrollDownMain: "<c-d>"  # Page down
# #     scrollUpMainAlt1: "K"   # Also page up
# #     scrollDownMainAlt1: "J"  # Also page down
# #     prevItem: "k"
# #     nextItem: "j"
# #     prevBlock: "h"
# #     nextBlock: "l"
# #     gotoTop: "g"
# #     gotoBottom: "G"
# #     prevPage: ","
# #     nextPage: "."
# #     togglePanel: "<tab>"
# #
# #   files:
# #     ignoreFile: "i"
# #     commitChanges: "c"
# #     commitChangesWithEditor: "C"
# #     amendLastCommit: "A"
# #     stageAll: "a"
# #     viewResetOptions: "R"
# #
# #   commits:
# #     cherryPickCopy: "c"
# #     revertCommit: "t"
# #     renameCommit: "r"
# #
# #   branches:
# #     createPullRequest: "o"
# #     viewPullRequestOptions: "P"
# #     checkoutBranchByName: "c"
# #     rebaseBranch: "r"
# #     mergeIntoCurrentBranch: "M"
# #
# #   status:
# #     checkForUpdate: "u"
# #     recentRepos: "<c-r>"
# #
