# .envrc ──────────────────────────────────────────────────────────────────
#
# Works with: direnv ≥ 2.35, nix-direnv ≥ 1.3, Nix ≥ 2.22 (flakes enabled)
# Tested on: macOS 14 (M-series), zsh 5.9+, Zellij 0.40+, Cursor IDE v0.47,
#            Neovim 0.10 nightly
# ─────────────────────────────────────────────────────────────────────────

# 1. Recreate the dev shell from the project’s flake.
watch_file flake.nix
watch_file flake.lock
use flake .                               # provided by nix-direnv :contentReference[oaicite:0]{index=0}

# 2. Local utility bins that shouldn’t leak outside the project.
PATH_add ./scripts
PATH_add ./node_modules/.bin

# 3. Project-specific variables (example: override editor & cache dir).
export EDITOR="nvim"
export XDG_CACHE_HOME="$PWD/.cache"

# 4. Neovim tweaks that load only inside this repo.
export NVIM_APPNAME="nv-$(${PWD##*/})"    # keeps configs isolated per-project

# 5. Git metadata you don’t want in global ~/.gitconfig.
if has git; then
  export GIT_AUTHOR_NAME="Hank Staff"
  export GIT_AUTHOR_EMAIL="hank@example.com"
fi

# 6. Zellij helpers — keep panes in the same env even when spawned directly.
#    nvim launched in a pane will inherit this env if you use `direnv exec`.
if [[ -n "$ZELLIJ" ]]; then               # inside a Zellij session :contentReference[oaicite:1]{index=1}
  export DIRENV_LOG_FORMAT=""
fi

# 7. Cursor IDE / VS Code – ensure integrated terminal and tasks load the env.
export DIRENV_DIR="$PWD"                  # picked up when Cursor is launched from CLI :contentReference[oaicite:2]{index=2}

# 8. Safety – refuse to load if a second direnv is shadow-hooking this shell.
#    Prevents the classic “_direnv_hook(): command not found” race. :contentReference[oaicite:3]{index=3}
source_env_if_exists ".envrc.local"

# ───────────────────────────── end ───────────────────────────────────────
