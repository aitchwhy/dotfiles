# <type>(<scope>): <subject>
# |<----  Using a Maximum Of 50 Characters  ---->|

# <body>
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|

# <footer>

# --- CONVENTIONAL COMMITS FORMAT (2025) ---
# type(scope): description [max 50 chars]
#
# [optional body - explain WHY, not HOW]
#
# [optional footer - reference issues, breaking changes]
#
# Types:
#   feat:     A new feature
#   fix:      A bug fix
#   docs:     Documentation only changes
#   style:    Changes that don't affect code meaning (formatting, etc)
#   refactor: Code change that neither fixes a bug nor adds a feature
#   perf:     Code change that improves performance
#   test:     Adding missing or correcting existing tests
#   build:    Changes to build system or dependencies
#   ci:       Changes to CI configuration files or scripts
#   chore:    Other changes that don't modify src or test files
#
# Breaking Changes:
#   feat!: or fix!: indicates a BREAKING CHANGE (append with !)
#   Include "BREAKING CHANGE:" in the footer with description
#
# Examples:
#   feat(auth): add support for OAuth2 authentication
#   fix(api): prevent crash when empty array is returned
#   docs(readme): update installation instructions
#   perf(rendering): improve component rendering speed
#
# ⚠️ For AI-assisted commit messages, use: just ai commit-msg
