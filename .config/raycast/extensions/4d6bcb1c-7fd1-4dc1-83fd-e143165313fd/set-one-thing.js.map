{
  "version": 3,
  "sources": ["../src/set-one-thing.tsx", "../src/utils.ts"],
  "sourcesContent": ["import { Form, Cache, ActionPanel, Action, Icon, LaunchProps, Keyboard } from \"@raycast/api\";\nimport { removeTheThing, setTheThing } from \"./utils\";\n\nconst cache = new Cache();\n\nconst placeholders = [\n  \"Eat more healthily\",\n  \"Exercise\",\n  \"Reply to Sarah\u2019s email\",\n  \"Be happy\",\n  \"Stop procrastinating\",\n  \"Finish the \uD83E\uDD84 project\",\n  \"Important meeting today\",\n];\n\nconst placeholder = placeholders[Math.floor(Math.random() * placeholders.length)];\n\nexport default function Command(\n  props: LaunchProps<{ arguments?: Arguments.SetOneThing; launchContext: { oneThing: string } }>\n) {\n  const oneThingFromLaunchProps = props.arguments?.oneThing ?? props.launchContext?.oneThing;\n  if (oneThingFromLaunchProps) {\n    return setTheThing(oneThingFromLaunchProps);\n  }\n\n  const oneThing = cache.get(\"onething\");\n\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          <Action.SubmitForm icon={Icon.Pencil} title=\"Set the Thing\" onSubmit={(values) => setTheThing(values.text)} />\n          {oneThing ? (\n            <Action\n              style={Action.Style.Destructive}\n              icon={Icon.Trash}\n              title=\"Remove the Thing\"\n              shortcut={Keyboard.Shortcut.Common.Remove}\n              onAction={removeTheThing}\n            />\n          ) : null}\n        </ActionPanel>\n      }\n    >\n      <Form.TextField id=\"text\" placeholder={placeholder} title=\"One Thing\" />\n    </Form>\n  );\n}\n", "import { launchCommand, LaunchType, popToRoot, closeMainWindow, Cache, Toast, showToast } from \"@raycast/api\";\n\nexport async function updateMenubar({ shouldPopAndClose }: { shouldPopAndClose: boolean }) {\n  try {\n    await launchCommand({ name: \"show-one-thing\", type: LaunchType.Background });\n  } catch (error) {\n    console.error(error);\n  }\n\n  if (shouldPopAndClose) {\n    await popToRoot();\n    await closeMainWindow();\n  }\n}\n\nexport async function setTheThing(text: string) {\n  const cache = new Cache();\n  cache.set(\"onething\", text);\n\n  await updateMenubar({ shouldPopAndClose: true });\n  await showToast({ title: \"Set One Thing\", style: Toast.Style.Success });\n}\n\nexport async function removeTheThing() {\n  const cache = new Cache();\n  cache.remove(\"onething\");\n\n  await updateMenubar({ shouldPopAndClose: true });\n  await showToast({ title: \"Removed One Thing\", style: Toast.Style.Success });\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAA8E,wBCA9E,IAAAC,EAA+F,wBAE/F,eAAsBC,EAAc,CAAE,kBAAAC,CAAkB,EAAmC,CACzF,GAAI,CACF,QAAM,iBAAc,CAAE,KAAM,iBAAkB,KAAM,aAAW,UAAW,CAAC,CAC7E,OAASC,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CAEID,IACF,QAAM,aAAU,EAChB,QAAM,mBAAgB,EAE1B,CAEA,eAAsBE,EAAYC,EAAc,CAChC,IAAI,QAAM,EAClB,IAAI,WAAYA,CAAI,EAE1B,MAAMJ,EAAc,CAAE,kBAAmB,EAAK,CAAC,EAC/C,QAAM,aAAU,CAAE,MAAO,gBAAiB,MAAO,QAAM,MAAM,OAAQ,CAAC,CACxE,CAEA,eAAsBK,GAAiB,CACvB,IAAI,QAAM,EAClB,OAAO,UAAU,EAEvB,MAAML,EAAc,CAAE,kBAAmB,EAAK,CAAC,EAC/C,QAAM,aAAU,CAAE,MAAO,oBAAqB,MAAO,QAAM,MAAM,OAAQ,CAAC,CAC5E,CDCQ,IAAAM,EAAA,6BA3BFC,EAAQ,IAAI,QAEZC,EAAe,CACnB,qBACA,WACA,8BACA,WACA,uBACA,+BACA,yBACF,EAEMC,EAAcD,EAAa,KAAK,MAAM,KAAK,OAAO,EAAIA,EAAa,MAAM,CAAC,EAEjE,SAARE,EACLC,EACA,CACA,IAAMC,EAA0BD,EAAM,WAAW,UAAYA,EAAM,eAAe,SAClF,GAAIC,EACF,OAAOC,EAAYD,CAAuB,EAG5C,IAAME,EAAWP,EAAM,IAAI,UAAU,EAErC,SACE,OAAC,QACC,WACE,QAAC,eACC,oBAAC,SAAO,WAAP,CAAkB,KAAM,OAAK,OAAQ,MAAM,gBAAgB,SAAWQ,GAAWF,EAAYE,EAAO,IAAI,EAAG,EAC3GD,KACC,OAAC,UACC,MAAO,SAAO,MAAM,YACpB,KAAM,OAAK,MACX,MAAM,mBACN,SAAU,WAAS,SAAS,OAAO,OACnC,SAAUE,EACZ,EACE,MACN,EAGF,mBAAC,OAAK,UAAL,CAAe,GAAG,OAAO,YAAaP,EAAa,MAAM,YAAY,EACxE,CAEJ",
  "names": ["set_one_thing_exports", "__export", "Command", "__toCommonJS", "import_api", "import_api", "updateMenubar", "shouldPopAndClose", "error", "setTheThing", "text", "removeTheThing", "import_jsx_runtime", "cache", "placeholders", "placeholder", "Command", "props", "oneThingFromLaunchProps", "setTheThing", "oneThing", "values", "removeTheThing"]
}
