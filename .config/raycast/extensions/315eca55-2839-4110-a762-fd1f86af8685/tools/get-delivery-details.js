"use strict";var c=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var x=(e,r)=>{for(var t in r)c(e,t,{get:r[t],enumerable:!0})},w=(e,r,t,a)=>{if(r&&typeof r=="object"||typeof r=="function")for(let i of _(r))!v.call(e,i)&&i!==t&&c(e,i,{get:()=>r[i],enumerable:!(a=y(r,i))||a.enumerable});return e};var D=e=>w(c({},"__esModule",{value:!0}),e);var P={};x(P,{default:()=>p});module.exports=D(P);var l=require("@raycast/api");var h={0:"Completed",1:"Frozen",2:"In Transit",3:"Ready for Pickup",4:"Out for Delivery",5:"Not Found",6:"Failed Delivery Attempt",7:"Exception",8:"Info Received"};function f(e){return h[e]||"Unknown Status"}function k(){let e=(0,l.getPreferenceValues)();if(!e.apiKey)throw new Error("API key not found. Please add your Parcel API key in extension preferences.");return e.apiKey}function E(e){return`https://api.parcel.app/external/deliveries/?filter_mode=${e}`}function I(){return{"api-key":k()}}async function d(e){let r=E(e),t=await fetch(r,{headers:I()});if(!t.ok)throw new Error(`API request failed with status ${t.status} (${await t.text()})`);let a=await t.json(),i=b(a);if(i)throw i;return a.deliveries}function b(e){return e.success?null:new Error(e?.error_message||"Unknown API error")}async function p(e){try{let r=await d("active"),t=r.find(n=>n.tracking_number===e.tracking_number);if(t||(r=await d("recent"),t=r.find(n=>n.tracking_number===e.tracking_number)),!t)return{found:!1,message:`No delivery found with tracking number ${e.tracking_number}`};let a=n=>{if(!n)return"Not available";try{return new Date(n).toLocaleDateString(void 0,{year:"numeric",month:"short",day:"numeric"})}catch{return"Invalid date"}},i=n=>{if(!n)return"Unknown";try{let s=new Date(n),u=new Date;s.setHours(0,0,0,0),u.setHours(0,0,0,0);let g=s.getTime()-u.getTime(),o=Math.ceil(g/(1e3*60*60*24));return o<0?`${Math.abs(o)} day(s) ago`:o===0?"Today":`In ${o} day(s)`}catch{return"Unknown"}},m=t.events?.map(n=>({...n,formatted_date:a(n.date),time:n.date?new Date(n.date).toLocaleTimeString(void 0,{hour:"2-digit",minute:"2-digit"}):"Unknown"}))||[];return{found:!0,delivery:{...t,formatted_date_expected:a(t.date_expected),delivery_timeframe:i(t.date_expected),status_description:f(t.status_code),formatted_events:m}}}catch(r){throw new Error(`Failed to fetch delivery details: ${r.message}`)}}
