{
  "version": 3,
  "sources": ["../../src/tools/run-git-command.ts"],
  "sourcesContent": ["import { exec } from \"child_process\";\nimport { Tool } from \"@raycast/api\";\n\ntype Input = {\n  /**\n   * The git command to execute\n   */\n  command: string;\n  /**\n   * The repository path (required)\n   */\n  path: string;\n  /**\n   * Whether the path is a git repository (required)\n   */\n  isGitRepo: boolean;\n};\n\n/**\n * Executes a git command in the specified repository.\n * Requires path and isGitRepo to be provided from get-current-directory tool first.\n */\nexport default async function (input: Input) {\n  return new Promise((resolve, reject) => {\n    if (!input.isGitRepo) {\n      reject(`Directory ${input.path} is not a git repository`);\n      return;\n    }\n\n    // Execute the git command\n    exec(input.command, { cwd: input.path }, (error, stdout, stderr) => {\n      if (error) {\n        reject(`Git command failed: ${stderr}`);\n        return;\n      }\n      resolve({\n        output: stdout.trim(),\n        command: input.command,\n        path: input.path,\n      });\n    });\n  });\n}\n\nexport const confirmation: Tool.Confirmation<Input> = async (input) => {\n  return {\n    message: \"Allow this git command to run?\\n```bash\\n\" + input.command + \"\\n```\",\n    info: [\n      { name: \"Command\", value: input.command },\n      { name: \"Repository\", value: input.path },\n    ],\n  };\n};\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,kBAAAE,EAAA,YAAAC,IAAA,eAAAC,EAAAJ,GAAA,IAAAK,EAAqB,yBAsBrB,eAAOF,EAAwBG,EAAc,CAC3C,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,GAAI,CAACF,EAAM,UAAW,CACpBE,EAAO,aAAaF,EAAM,IAAI,0BAA0B,EACxD,MACF,IAGA,QAAKA,EAAM,QAAS,CAAE,IAAKA,EAAM,IAAK,EAAG,CAACG,EAAOC,EAAQC,IAAW,CAClE,GAAIF,EAAO,CACTD,EAAO,uBAAuBG,CAAM,EAAE,EACtC,MACF,CACAJ,EAAQ,CACN,OAAQG,EAAO,KAAK,EACpB,QAASJ,EAAM,QACf,KAAMA,EAAM,IACd,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAEO,IAAMJ,EAAyC,MAAOI,IACpD,CACL,QAAS,4CAA8CA,EAAM,QAAU,QACvE,KAAM,CACJ,CAAE,KAAM,UAAW,MAAOA,EAAM,OAAQ,EACxC,CAAE,KAAM,aAAc,MAAOA,EAAM,IAAK,CAC1C,CACF",
  "names": ["run_git_command_exports", "__export", "confirmation", "run_git_command_default", "__toCommonJS", "import_child_process", "input", "resolve", "reject", "error", "stdout", "stderr"]
}
