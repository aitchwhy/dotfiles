"use strict";var C=Object.create;var f=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var L=Object.getPrototypeOf,O=Object.prototype.hasOwnProperty;var z=(t,e)=>{for(var o in e)f(t,o,{get:e[o],enumerable:!0})},y=(t,e,o,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of E(e))!O.call(t,r)&&r!==o&&f(t,r,{get:()=>e[r],enumerable:!(a=j(e,r))||a.enumerable});return t};var B=(t,e,o)=>(o=t!=null?C(L(t)):{},y(e||!t||!t.__esModule?f(o,"default",{value:t,enumerable:!0}):o,t)),J=t=>y(f({},"__esModule",{value:!0}),t);var N={};z(N,{default:()=>k});module.exports=J(N);var n=require("@raycast/api"),d=B(require("path"));var g=require("@raycast/api"),h=require("path"),F=require("fs/promises"),S=require("child_process");async function x(t,...e){let o=(0,h.join)(g.environment.assetsPath,"compiled_raycast_swift/swift");return await(0,F.chmod)(o,"755"),new Promise((a,r)=>{let w=[t];for(let s of e)try{w.push(JSON.stringify(s,(i,c)=>c===void 0?null:c))}catch(i){r(new m("Failed to serialize input to JSON: "+i.message));return}let l=(0,S.spawn)(o,w),u=[],p=[];l.stdout?.on("data",s=>{u.push(s.toString())}),l.stderr?.on("data",s=>{p.push(s.toString())}),l.on("exit",s=>{if(s===0)try{let i=u.join("").trim();i.length!=0?a(JSON.parse(i)):a(null)}catch(i){let c=new m("Failed to deserialize result from JSON: "+i.message);c.stdout=u.join("").trim(),c.stderr=p.join("").trim(),r(c)}else{let i=new m(p.join("").trim()||u.join("").trim()||"Could not get any data");i.stdout=u.join("").trim(),i.stderr=p.join("").trim(),r(i)}}),l.on("error",s=>{r(s)})})}async function P(t){return await x("isPDFDocumentLocked",t)}async function D(t,e){return await x("merge",t,e)}var m=class extends Error{constructor(e){super(e),this.name="SwiftError"}};async function k(t){try{let{outputFilename:e}=t.arguments,o=await(0,n.getSelectedFinderItems)();if(o.length<2)throw new Error("You must select at least two PDF files in Finder");for(let r of o){if(d.default.extname(r.path).toLowerCase()!==".pdf")throw new Error("Only PDF files should be selected in Finder");if(await P(r.path))throw new Error(`"${d.default.basename(r.path)}" is password-protected`)}await(0,n.closeMainWindow)(),await(0,n.showToast)({style:n.Toast.Style.Animated,title:"Merging PDF files"});let a=o.filter(r=>d.default.extname(r.path).toLowerCase()===".pdf");await D(a.map(r=>r.path),e),await(0,n.showToast)({style:n.Toast.Style.Success,title:"PDF files merged successfully"})}catch(e){await(0,n.showToast)({style:n.Toast.Style.Failure,title:e instanceof Error?e.message:String(e)})}}
