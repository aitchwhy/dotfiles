{
  "version": 3,
  "sources": ["../src/finderToITerm.tsx", "../src/utils.ts"],
  "sourcesContent": ["import { Toast, showToast } from \"@raycast/api\";\nimport { runAppleScript } from \"./utils\";\n\nexport default async () => {\n  let script = `\n        if application \"Finder\" is not running then\n            return \"Not running\"\n        end if\n\n        tell application \"Finder\"\n            set pathList to (quoted form of POSIX path of (folder of the front window as alias))\n        end tell\n    `;\n\n  script += `\n        tell application \"System Events\"\n            -- some versions might identify as \"iTerm2\" instead of \"iTerm\"\n            set isRunning to (exists (processes where name is \"iTerm\")) or (exists (processes where name is \"iTerm2\"))\n        end tell\n\n        tell application \"iTerm\"\n            activate\n            set hasNoWindows to ((count of windows) is 0)\n            if isRunning and hasNoWindows then\n                create window with default profile\n            end if\n            select first window\n\n            tell the first window\n            if isRunning and hasNoWindows is false then\n                create tab with default profile\n            end if\n            tell current session to write text \"clear; cd \" & pathList\n            end tell\n        end tell\n    `;\n\n  try {\n    const result = await runAppleScript(script);\n    await showToast(Toast.Style.Success, \"Done\", result);\n  } catch (err) {\n    await showToast(Toast.Style.Failure, \"Something went wrong\");\n  }\n};\n", "import { spawnSync } from \"node:child_process\";\n\nexport async function runAppleScript(script: string) {\n  if (process.platform !== \"darwin\") {\n    throw new Error(\"macOS only\");\n  }\n\n  const locale = process.env.LC_ALL;\n  delete process.env.LC_ALL;\n  const { stdout } = spawnSync(\"osascript\", [\"-e\", script]);\n  process.env.LC_ALL = locale;\n  return stdout.toString();\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAiC,wBCAjC,IAAAC,EAA0B,8BAE1B,eAAsBC,EAAeC,EAAgB,CACnD,GAAI,QAAQ,WAAa,SACvB,MAAM,IAAI,MAAM,YAAY,EAG9B,IAAMC,EAAS,QAAQ,IAAI,OAC3B,OAAO,QAAQ,IAAI,OACnB,GAAM,CAAE,OAAAC,CAAO,KAAI,aAAU,YAAa,CAAC,KAAMF,CAAM,CAAC,EACxD,eAAQ,IAAI,OAASC,EACdC,EAAO,SAAS,CACzB,CDTA,IAAOC,EAAQ,SAAY,CACzB,IAAIC,EAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUbA,GAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAuBV,GAAI,CACF,IAAMC,EAAS,MAAMC,EAAeF,CAAM,EAC1C,QAAM,aAAU,QAAM,MAAM,QAAS,OAAQC,CAAM,CACrD,MAAc,CACZ,QAAM,aAAU,QAAM,MAAM,QAAS,sBAAsB,CAC7D,CACF",
  "names": ["finderToITerm_exports", "__export", "finderToITerm_default", "__toCommonJS", "import_api", "import_node_child_process", "runAppleScript", "script", "locale", "stdout", "finderToITerm_default", "script", "result", "runAppleScript"]
}
