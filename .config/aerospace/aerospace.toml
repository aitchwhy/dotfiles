# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = [  ]

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [  ]

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers                         = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 10

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = [ 'move-mouse monitor-lazy-center' ]

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true
####################################
# You can use workspace-to-monitor-force-assignment syntax to assign workspaces to always appear on particular monitors
# [workspace-to-monitor-force-assignment]
#     1 = 1                            # Monitor sequence number from left to right. 1-based indexing
#     2 = 'main'                       # Main monitor
#     3 = 'secondary'                  # Non-main monitor in case when there are only two monitors
#     4 = 'built-in'                   # Case insensitive regex substring
#     5 = '^built-in retina display$'  # Case insensitive regex match
#     6 = ['secondary', 'dell']        # You can specify multiple patterns.
#                                      #   The first matching pattern will be used
####################################
[workspace-to-monitor-force-assignment]
	# Displays
	1 = 1
	2 = 2
	3 = 3
	# AI chat apps (claude, etc.)
	I = 3
	# Code editors (cursor, vscode, etc.)
	C = 2
	# Utils (DevUtils)
	U = 2
	# Browser (chrome, safari, etc.)
	L = 1
	# Vaults (Bitwarden), 1password, etc.
	V = 2
	# Email (Superhuman)
	# Slack
	S = 2
	# Calendar (Fantastical)

	# Finder (Files)
	F = 2
	# Todoist
	T = 1
	# Docker / logs / Orbstack
	# Dash Docs
	D = 1
	# Shell (Terminal, Ghostty, etc.)
	X = 1
	# Git (Fork)
	# Ghostty
	G = 2
	# Kaleidoscope
	K = 1
	# Obsidian Notes
	O = 1
	# Cursor
	
	
	
	

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
	preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
	inner.horizontal = 0
	inner.vertical   = 0
	outer.left       = 0
	outer.bottom     = 0
	outer.top        = 0
	outer.right      = 0

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

	# All possible keys:
	# - Letters.        a, b, c, ..., z
	# - Numbers.        0, 1, 2, ..., 9
	# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
	# - F-keys.         f1, f2, ..., f20
	# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
	#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
	#                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
	#                   sectionSign (ISO keyboards only, european keyboards only)
	# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
	#                   keypadMinus, keypadMultiply, keypadPlus
	# - Arrows.         left, down, up, right

	# All possible modifiers: cmd, alt, ctrl, shift

	# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

	# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
	# You can uncomment the following lines to open up terminal with alt + enter shortcut
	# (like in i3)
	# alt-enter = '''exec-and-forget osascript -e '
	# tell application "Terminal"
	#     do script
	#     activate
	# end tell'
	# '''

	######### Layout
	# See: https://nikitabobko.github.io/AeroSpace/commands#layout
	######### Default
	# alt-slash = 'layout tiles horizontal vertical'
	# alt-comma = 'layout accordion horizontal vertical'
	######### Notes
	# Change layout of the focused window to the given layout
	# If several arguments are supplied then finds the first argument that doesnâ€™t describe the currently active layout, and applies the layout.
	# 
	# Change both tiling layout and orientation in one go: h_tiles|v_tiles|h_accordion|v_accordion
	# Change tiling layout but preserve orientation: tiles|accordion
	# Change orientation but preserve layout: horizontal|vertical
	# Toggle floating/tiling mode: tiling|floating
	#####################

	# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
	alt-1 = 'workspace 1'
	alt-2 = 'workspace 2'
	alt-3 = 'workspace 3'
	alt-4 = 'workspace 4'
	alt-5 = 'workspace 5'
	alt-6 = 'workspace 6'
	alt-7 = 'workspace 7'
	alt-8 = 'workspace 8'
	alt-9 = 'workspace 9'
	alt-a = 'workspace A'
	alt-b = 'workspace B'
	alt-c = 'workspace C'
	alt-d = 'workspace D'
	alt-e = 'workspace E'
	alt-f = 'workspace F'
	alt-g = 'workspace G'
	alt-i = 'workspace I'
	# alt-m = 'workspace M'
	alt-n = 'workspace N'
	alt-o = 'workspace O'
	alt-p = 'workspace P'
	alt-q = 'workspace Q'
	alt-r = 'workspace R'
	alt-s = 'workspace S'
	alt-t = 'workspace T'
	alt-u = 'workspace U'
	alt-v = 'workspace V'
	# alt-w = 'workspace W'
	alt-x = 'workspace X'
	alt-y = 'workspace Y'
	alt-z = 'workspace Z'

	# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
	alt-shift-1 = 'move-node-to-workspace 1'
	alt-shift-2 = 'move-node-to-workspace 2'
	alt-shift-3 = 'move-node-to-workspace 3'
	alt-shift-4 = 'move-node-to-workspace 4'
	alt-shift-5 = 'move-node-to-workspace 5'
	alt-shift-6 = 'move-node-to-workspace 6'
	alt-shift-7 = 'move-node-to-workspace 7'
	alt-shift-8 = 'move-node-to-workspace 8'
	alt-shift-9 = 'move-node-to-workspace 9'
	alt-shift-a = 'move-node-to-workspace A'
	alt-shift-b = 'move-node-to-workspace B'
	alt-shift-c = 'move-node-to-workspace C'
	alt-shift-d = 'move-node-to-workspace D'
	alt-shift-e = 'move-node-to-workspace E'
	alt-shift-f = 'move-node-to-workspace F'
	alt-shift-g = 'move-node-to-workspace G'
	alt-shift-i = 'move-node-to-workspace I'
	# alt-shift-m = 'move-node-to-workspace M'
	alt-shift-n = 'move-node-to-workspace N'
	alt-shift-o = 'move-node-to-workspace O'
	alt-shift-p = 'move-node-to-workspace P'
	alt-shift-q = 'move-node-to-workspace Q'
	alt-shift-r = 'move-node-to-workspace R'
	alt-shift-s = 'move-node-to-workspace S'
	alt-shift-t = 'move-node-to-workspace T'
	alt-shift-u = 'move-node-to-workspace U'
	alt-shift-v = 'move-node-to-workspace V'
	# alt-shift-w = 'move-node-to-workspace W'
	alt-shift-x = 'move-node-to-workspace X'
	alt-shift-y = 'move-node-to-workspace Y'
	alt-shift-z = 'move-node-to-workspace Z'

	# Layout
	# alt-comma = 'layout tiles horizontal'
	# alt-backslash = 'layout tiles horizontal '
	alt-slash = 'layout tiles horizontal vertical'
    alt-comma = 'layout accordion horizontal vertical'

	# See: https://nikitabobko.github.io/AeroSpace/commands#focus
	alt-h = 'focus left'
	alt-j = 'focus down'
	alt-k = 'focus up'
	alt-l = 'focus right'


	# See: https://nikitabobko.github.io/AeroSpace/commands#move
	alt-shift-h = 'move left'
	alt-shift-j = 'move down'
	alt-shift-k = 'move up'
	alt-shift-l = 'move right'

	# See: https://nikitabobko.github.io/AeroSpace/commands#resize
	alt-minus = 'resize smart -50'
	alt-equal = 'resize smart +50'
	alt-shift-equal = 'balance-sizes'

	# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
	alt-tab = 'workspace-back-and-forth'
	# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
	alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'


	ctrl-alt-shift-h = 'join-with left'
	ctrl-alt-shift-j = 'join-with down'
	ctrl-alt-shift-k = 'join-with up'
	ctrl-alt-shift-l = 'join-with right'

	# modes - See: https://nikitabobko.github.io/AeroSpace/commands#mode
	alt-shift-semicolon = 'mode service'
	alt-shift-w = 'mode workspace'
	alt-shift-m = 'mode monitor'


# [mode.monitor.binding]
# 	# Move node to monitor (arrow keys)
# 	# Move workspace to monitor (arrow keys)
# 	h = 'move-workspace-to-monitor --wrap-around left'
# 	j = 'move-workspace-to-monitor --wrap-around down'
# 	k = 'move-workspace-to-monitor --wrap-around up'
# 	l = 'move-workspace-to-monitor --wrap-around right'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
	esc     = [ 'reload-config', 'mode main' ]
	backspace = [ 'close-all-windows-but-current', 'mode main' ]
	r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout

	minus   = [ 'flatten-workspace-tree', 'mode main' ]        # reset layout
	# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
	# s = ['layout sticky tiling', 'mode main']
	down       = 'volume down'
	up         = 'volume up'
	shift-down = [ 'volume set 0', 'mode main' ]
	# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
    #s = ['layout sticky tiling', 'mode main']

    alt-shift-h = ['join-with left', 'mode main']
    alt-shift-j = ['join-with down', 'mode main']
    alt-shift-k = ['join-with up', 'mode main']
    alt-shift-l = ['join-with right', 'mode main']

[mode.monitor.binding]
	h = ['focus-monitor left', 'mode main']
	j = ['focus-monitor down', 'mode main']
	k = ['focus-monitor up', 'mode main']
	l = ['focus-monitor right', 'mode main']
	shift-h = ['move-workspace-to-monitor --wrap-around left', 'mode main']
	shift-j = ['move-workspace-to-monitor --wrap-around down', 'mode main']
	shift-k = ['move-workspace-to-monitor --wrap-around up', 'mode main']
	shift-l = ['move-workspace-to-monitor --wrap-around right', 'mode main']
