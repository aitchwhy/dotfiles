[
  {
    "bindings": {
      // "cmd-m": "zed::Minimize",
      "cmd-m": null,
      "cmd-o": null,
      "cmd-b": null
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "cmd-shift-k": "assistant::InlineAssist",
      "cmd-l": "agent::ToggleFocus",
      "cmd-shift-r": "workspace::Reload",
      "cmd-o": "outline::Toggle",
      "cmd-k": "command_palette::Toggle",
      "cmd-shift-o": "outline_panel::ToggleFocus",
      "cmd-b": "workspace::ToggleLeftDock",
      "cmd-shift-,": "zed::OpenKeymap"
    }
  },
  {
    "context": "Outline",
    "bindings": {
      "ctrl-o": "outline::Toggle",
      "cmd-p": "file_finder::Toggle"
    }
  },
  {
    "context": "(Editor || ProjectPanel || Terminal || OutlinePanel || GitPanel || Dock) && !VimWaiting && !menu && !editing",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-j": "workspace::ActivatePaneDown",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-l": "workspace::ActivatePaneRight"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "cmd-shift-p": "projects::OpenRecent",
      "cmd-shift-g": "git_panel::ToggleFocus",
      "cmd-shift-d": "debug_panel::ToggleFocus",
      "cmd-shift-o": "outline_panel::ToggleFocus",
      "cmd-g cmd-g": [
        "task::Spawn",
        {
          "lazygit": "Open lazygit"
        }
      ]
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "ctrl-=": "editor::SelectLargerSyntaxNode",
      "ctrl--": "editor::SelectSmallerSyntaxNode",
      "cmd-m": "workspace::ToggleZoom"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "cmd-p": "file_finder::Toggle"
    }
  },
  {
    "context": "vim_operator == none && !VimWaiting &&  vim_mode == normal",
    "bindings": {
      // "space p e": "workspace::ToggleLeftDock", // hide/show left dock
      // "space p r": "workspace::ToggleRightDock", // …right dock
      // "space p b": "workspace::ToggleBottomDock", // …bottom dock
      // "shift-h": "pane::ActivatePreviousItem",
      // "shift-l": "pane::ActivateNextItem",
      // "alt-j": "editor::MoveLineDown",
      // "alt-k": "editor::MoveLineUp",
      // "space c": "pane::CloseActiveItem",
      // "space t": "workspace::NewCenterTerminal",
      // "space e": "project_panel::ToggleFocus",
      // "space p e": "workspace::ToggleLeftDock",
      // "space q": "pane::CloseAllItems",
      // // "ctrl-space": "workspace::ToggleBottomDock",
      // // LSP
      // "space l s": "project_symbols::Toggle",
      // "space l i": "editor::GoToImplementationSplit",
      // "space l r": "editor::Rename",
      // "space s t": "workspace::NewSearch",
      // "space s s": "outline::Toggle",
      // //Buffers
      // "space b l": "pane::CloseItemsToTheRight",
      // "space b h": "pane::CloseItemsToTheLeft",
      // "space b a": "pane::ReopenClosedItem",
      // //Folding
      // "space z f": ["workspace::SendKeystrokes", "shift-v shift-f ctrl-c"],
      // "space z a": [
      //   "workspace::SendKeystrokes",
      //   "g g shift-v shift-g shift-f ctrl-c g g"
      // ], // Fold all
      // "space z u": [
      //   "workspace::SendKeystrokes",
      //   "g g shift-v shift-g space z z ctrl-c g g"
      // ], // Unfold all
      //Toggle Comments
      // "space /": "editor::ToggleComments",
      // "space r": "command_palette::Toggle",
      // "space w": "workspace::Save",
      // "space 1": ["pane::ActivateItem", 0],
      // "space 2": ["pane::ActivateItem", 1],
      // "space 3": ["pane::ActivateItem", 2],
      // "space 4": ["pane::ActivateItem", 3],
      // "space 5": ["pane::ActivateItem", 4],
      // "space 6": ["pane::ActivateItem", 5],
      // "space 7": ["pane::ActivateItem", 6],
      // "space 8": ["pane::ActivateItem", 7]
    }
  },
  // I dont know why this works!
  {
    "context": "Workspace && !VimWaiting &&  vim_mode != insert",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Dock",
    "bindings": {}
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-space": "workspace::ToggleBottomDock",
      "ctrl-o": "workspace::NewTerminal",
      "ctrl-a": ["workspace::SendKeystrokes", "ctrl-k ctrl-o"],
      "ctrl-n": ["workspace::SendKeystrokes", "ctrl-tab"],
      "ctrl-p": ["workspace::SendKeystrokes", "ctrl-shift-tab"],
      "ctrl-k": ["workspace::SendKeystrokes", "ctrl-alt-t"]
    }
  },
  {
    "context": "Editor && vim_mode == visual && !menu",
    "bindings": {
      "shift-k": "editor::MoveLineUp",
      "shift-j": "editor::MoveLineDown",
      "shift-f": "editor::Fold",
      "alt zio": "editor::UnfoldLines"
      // "space z z": [
      //   "workspace::SendKeystrokes",
      //   "alt zio ctrl-c h % shift-i ctrl-c"
      // ],
      // "space /": "editor::ToggleComments"
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      "jk": "vim::NormalBefore",
      "kj": "vim::NormalBefore",
      "j k": "vim::NormalBefore",
      "k j": "vim::NormalBefore"
    }
  },
  {
    "context": "!renaming && ProjectPanel && !VimWaiting && vim_mode != insert && !editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "d": "project_panel::RemoveFromProject",
      "r": "project_panel::Rename",
      "space e": "workspace::ActivatePaneRight"
    }
  },
  {
    "context": "Workspace && !VimWaiting && vim_mode != insert",
    "bindings": {
      "space r p": "projects::OpenRecent" // Open recent projects
    }
  },
  {
    "context": "(Editor ||  ProjectPanel || Terminal) && vim_mode != insert && !VimWaiting && !editing",
    "bindings": {
      "ctrl-right": "vim::ResizePaneRight", // Shrink right border
      "ctrl-left": "vim::ResizePaneLeft", // Expand right border
      "ctrl-up": "vim::ResizePaneDown", // Expand upward
      "ctrl-down": "vim::ResizePaneUp" // Shrink downward
    }
  },
  {
    "context": "Editor && vim_mode != insert && !VimWaiting",
    "bindings": {
      "space l j": "editor::GoToDiagnostic" // Go to the next LSP issue
    }
  }
]
