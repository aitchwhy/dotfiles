-----------------------------------------------------------------------------------
-- OPTIONS CONFIGURATION - LAZYVIM 8.X COMPATIBLE
-- -----------------------------------------------------------------------------------
-- -- Options are automatically loaded before lazy.nvim startup
-- -- Default options that are always set: https://github.com/LazyVim/LazyVim/blob/main/lua/lazyvim/config/options.lua
-- -- Add any additional options here
--
-- -- LazyVim 8.x specific global settings
-- vim.g.lazyvim_picker = "fzf" -- Use fzf-lua as the picker
vim.g.lazyvim_cmp = "blink.cmp" -- Use blink.cmp as the completion engine
--
-- -- Disable providers you don't need for better startup performance
-- vim.g.loaded_perl_provider = 0
-- vim.g.loaded_ruby_provider = 0
--
-- -- Register zsh as a bash-like language for treesitter
-- vim.treesitter.language.register("bash", "zsh")
vim.treesitter.language.register("bash", "zsh")
--
-- -- UI improvements
vim.opt.termguicolors = true -- Enable 24-bit RGB colors
-- vim.opt.number = true -- Show line numbers
-- vim.opt.relativenumber = true -- Show relative line numbers
-- vim.opt.signcolumn = "yes" -- Always show sign column
-- vim.opt.cursorline = true -- Highlight current line
-- vim.opt.showmode = false -- Don't show mode in command line (shown by statusline)
--
-- -- Editing experience
-- vim.opt.expandtab = true -- Use spaces instead of tabs
-- vim.opt.shiftwidth = 2 -- Size of an indent
-- vim.opt.tabstop = 2 -- Number of spaces tabs count for
-- vim.opt.softtabstop = 2 -- Number of spaces a tab counts for while editing
-- vim.opt.smartindent = true -- Insert indents automatically
-- vim.opt.wrap = false -- Disable line wrap
-- vim.opt.linebreak = true -- Break lines at word boundary
--
-- -- Search settings
-- vim.opt.ignorecase = true -- Ignore case when searching
-- vim.opt.smartcase = true -- Don't ignore case with capitals
-- vim.opt.inccommand = "split" -- Preview substitutions
--
-- -- System integration
vim.opt.clipboard = "unnamedplus" -- Use system clipboard
-- vim.opt.mouse = "a" -- Enable mouse in all modes
-- vim.opt.updatetime = 100 -- Faster completion
-- vim.opt.timeout = true -- Enable timeout for mappings
-- vim.opt.timeoutlen = 300 -- Time to wait for a mapped sequence

vim.g.snacks_animate = false

-----------------------------------------------------------------
-- -- DEFAULT CONFIGS
-- -- This file is automatically loaded by plugins.core
-- vim.g.mapleader = " "
-- vim.g.maplocalleader = "\\"
--
-- -- LazyVim auto format
vim.g.autoformat = true
--
-- -- Snacks animations
-- -- Set to `false` to globally disable all snacks animations
vim.g.snacks_animate = false
--
-- -- LazyVim picker to use.
-- -- Can be one of: telescope, fzf
-- -- Leave it to "auto" to automatically use the picker
-- -- enabled with `:LazyExtras`
vim.g.lazyvim_picker = "fzf"
--
-- -- LazyVim completion engine to use.
-- -- Can be one of: nvim-cmp, blink.cmp
-- -- Leave it to "auto" to automatically use the completion engine
-- -- enabled with `:LazyExtras`
vim.g.lazyvim_cmp = "blink.cmp"
--
-- -- if the completion engine supports the AI source,
-- -- use that instead of inline suggestions
-- vim.g.ai_cmp = true
-- vim.g.ai_cmp = true
-- vim.g.loaded_perl_provider = 0

-- TODO: fix path
-- vim.g.ruby_host_prog = vim.fn.expand("$HOME/.gem/ruby/3.4.0/bin/neovim-ruby-host")

-- 1 — Python 3 provider (pynvim)<D-s>
-- init.lua  or  lua/config/options.lua
-- TODO: find uv path for python
-- vim.g.python3_host_prog = "/opt/homebrew/bin/python3"
-- vim.g.python3_host_prog = "/Users/hank/.local/share/uv/python"

-- vim.g.python3_host_prog =

-- vim.ui.select = "Snacks.picker.select"

--
-- -- LazyVim root dir detection
-- -- Each entry can be:
-- -- * the name of a detector function like `lsp` or `cwd`
-- -- * a pattern or array of patterns like `.git` or `lua`.
-- -- * a function with signature `function(buf) -> string|string[]`
-- vim.g.root_spec = { "lsp", { ".git", "lua" }, "cwd" }
--
-- -- Optionally setup the terminal to use
-- -- This sets `vim.o.shell` and does some additional configuration for:
-- -- * pwsh
-- -- * powershell
-- LazyVim.terminal.setup("pwsh")
--
-- -- Set LSP servers to be ignored when used with `util.root.detectors.lsp`
-- -- for detecting the LSP root
-- vim.g.root_lsp_ignore = { "copilot" }
--
-- -- Hide deprecation warnings
-- vim.g.deprecation_warnings = false
--
-- -- Show the current document symbols location from Trouble in lualine
-- -- You can disable this for a buffer by setting `vim.b.trouble_lualine = false`
-- vim.g.trouble_lualine = true
--
local opt = vim.opt
--
-- opt.autowrite = true -- Enable auto write
-- -- only set clipboard if not in ssh, to make sure the OSC 52
-- -- integration works automatically. Requires Neovim >= 0.10.0
-- opt.clipboard = vim.env.SSH_TTY and "" or "unnamedplus" -- Sync with system clipboard
-- opt.completeopt = "menu,menuone,noselect"
-- opt.conceallevel = 2 -- Hide * markup for bold and italic, but not markers with substitutions
-- opt.confirm = true -- Confirm to save changes before exiting modified buffer
-- opt.cursorline = true -- Enable highlighting of the current line
-- opt.expandtab = true -- Use spaces instead of tabs
-- opt.fillchars = {
--   foldopen = "",
--   foldclose = "",
--   fold = " ",
--   foldsep = " ",
--   diff = "╱",
--   eob = " ",
-- }
-- opt.foldlevel = 99
-- opt.formatexpr = "v:lua.require'lazyvim.util'.format.formatexpr()"
-- opt.formatoptions = "jcroqlnt" -- tcqj
-- opt.grepformat = "%f:%l:%c:%m"
opt.grepprg = "rg --vimgrep"
-- opt.ignorecase = true -- Ignore case
-- opt.inccommand = "nosplit" -- preview incremental substitute
-- opt.jumpoptions = "view"
-- opt.laststatus = 3 -- global statusline
-- opt.linebreak = true -- Wrap lines at convenient points
-- opt.list = true -- Show some invisible characters (tabs...
vim.opt.mouse = "a" -- Enable mouse mode
-- opt.number = true -- Print line number
-- opt.pumblend = 10 -- Popup blend
-- opt.pumheight = 10 -- Maximum number of entries in a popup
-- opt.relativenumber = true -- Relative line numbers
-- opt.ruler = false -- Disable the default ruler
-- opt.scrolloff = 4 -- Lines of context
-- opt.sessionoptions = { "buffers", "curdir", "tabpages", "winsize", "help", "globals", "skiprtp", "folds" }
-- opt.shiftround = true -- Round indent
-- opt.shiftwidth = 2 -- Size of an indent
-- opt.shortmess:append({ W = true, I = true, c = true, C = true })
-- opt.showmode = false -- Dont show mode since we have a statusline
-- opt.sidescrolloff = 8 -- Columns of context
-- opt.signcolumn = "yes" -- Always show the signcolumn, otherwise it would shift the text each time
-- opt.smartcase = true -- Don't ignore case with capitals
-- opt.smartindent = true -- Insert indents automatically
-- opt.spelllang = { "en" }
-- opt.splitbelow = true -- Put new windows below current
-- opt.splitkeep = "screen"
-- opt.splitright = true -- Put new windows right of current
-- opt.statuscolumn = [[%!v:lua.require'snacks.statuscolumn'.get()]]
-- opt.tabstop = 2 -- Number of spaces tabs count for
-- opt.timeoutlen = vim.g.vscode and 1000 or 300 -- Lower than default (1000) to quickly trigger which-key
-- opt.undofile = true
-- opt.undolevels = 10000
-- opt.updatetime = 200 -- Save swap file and trigger CursorHold
-- opt.virtualedit = "block" -- Allow cursor to move where there is no text in visual block mode
-- opt.wildmode = "longest:full,full" -- Command-line completion mode
-- opt.winminwidth = 5 -- Minimum window width
-- opt.wrap = false -- Disable line wrap
--
-- if vim.fn.has("nvim-0.10") == 1 then
--   opt.smoothscroll = true
--   opt.foldexpr = "v:lua.require'lazyvim.util'.ui.foldexpr()"
--   opt.foldmethod = "expr"
--   opt.foldtext = ""
-- else
--   opt.foldmethod = "indent"
--   opt.foldtext = "v:lua.require'lazyvim.util'.ui.foldtext()"
-- end
--
-- -- Fix markdown indentation settings
-- vim.g.markdown_recommended_style = 0
-- -- -- Folding with treesitter (Neovim 0.11+ compatible)
-- -- vim.opt.foldmethod = "expr"
-- -- vim.opt.foldexpr = "vim.treesitter.foldexpr()"
-- -- vim.opt.foldenable = true -- Disable folding by default
-- -- vim.opt.foldlevel = 99 -- High fold level to open folds by default
-- --
-- -- -- File handling
-- -- vim.opt.undofile = true -- Save undo history
-- -- vim.opt.confirm = true -- Confirm to save changes before exiting
-- -- vim.opt.autowrite = true -- Auto save before commands like :next and :make
-- --
-- -- -- Split preferences
-- -- vim.opt.splitbelow = true -- Put new windows below current
-- -- vim.opt.splitright = true -- Put new windows right of current
-- --
-- -- -- Performance
-- -- vim.opt.shadafile = "NONE" -- Disable shada file for faster startup
-- -- -- vim.opt.lazyredraw = true -- Don't redraw while executing macros
-- --
-- -- -- Disable some builtin plugins we don't need
-- -- -- vim.g.loaded_gzip = 1
-- -- -- vim.g.loaded_tarPlugin = 1
-- -- -- vim.g.loaded_zipPlugin = 1
-- -- -- vim.g.loaded_2html_plugin = 1
-----------------------------------------------------------------
